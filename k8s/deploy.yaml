apiVersion: apps/v1
kind: Deployment
metadata:
  name: sk014-stock-api
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sk014-stock-api
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8081'
        prometheus.io/path: '/actuator/prometheus'
        update: 09955f5d4ffbe64880115167c3af4b1f
      labels:
        app: sk014-stock-api
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: control-plane
                operator: In
                values:
                - "amdp"
      containers:
      - name: stock-api
        image: amdp-registry.skala-ai.com/skala25a/sk014-stock-api:1.0.0
        imagePullPolicy: Always
        env:
        - name: LOGGING_LEVEL
          value: DEBUG
        - name: USER_NAME
          value: sk014
        - name: NAMESPACE
          value: skala-practice
        ports:
        - containerPort: 8080
        startupProbe:
          httpGet:
            path: /health/startup
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
      tolerations:
      - effect: 
        key: control-plane
        operator: Equal
        value: "amdp"
